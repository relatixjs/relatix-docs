import{_ as n,c as a,o as l,ae as o}from"./chunks/framework.oxQ2x61N.js";const C=JSON.parse('{"title":"Workflow","description":"","frontmatter":{},"headers":[],"relativePath":"en/workflow.md","filePath":"en/workflow.md"}'),e={name:"en/workflow.md"};function p(t,s,D,c,r,y){return l(),a("div",null,s[0]||(s[0]=[o(`<h1 id="workflow" tabindex="-1">Workflow <a class="header-anchor" href="#workflow" aria-label="Permalink to &quot;Workflow&quot;">​</a></h1><p>The <code>relatix</code> <em>workflow</em> mirrors the journey of a relational schema—from defining the tables to putting them to use. You first lay out the structure (tables and references), then enrich it with consistent data, and finally retrieve typed utilities to read or modify that data. Each step is chained to the previous one, making the progression linear and easy to follow.</p><ol><li><strong>Initial table definition</strong>: Use the <code>Tables</code> function with an optional configuration object to generate the table constructor.</li><li><strong>Adding tables</strong>: Chain the constructor with <code>.addTables</code> to create an initial set of tables.</li><li><strong>Adding additional tables</strong>: The <code>.addTables</code> method can be chained as many times as necessary to include tables that contain references to tables defined by previous calls.</li><li><strong>Populating data</strong>: Add entries to the tables with <code>.populate</code>.</li><li><strong>Finalisation</strong>: Call <code>.done()</code> to obtain a set of utilities for interacting with the model.</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Tables</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &quot;relatix&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> const</span><span style="color:#4FC1FF;"> model</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">Tables</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#6A9955;">  // Tables configuration parameters</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">addTables</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#6A9955;">  // Adding standalone tables (internal references allowed)</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">addTables</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">Ref</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#6A9955;">  // Adding tables that reference the existing ones</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">populate</span><span style="color:#D4D4D4;">(({ </span><span style="color:#9CDCFE;">Table1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Table2</span><span style="color:#D4D4D4;">, ... }) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> ({</span></span>
<span class="line"><span style="color:#6A9955;">  // Filling the tables with concrete data</span></span>
<span class="line"><span style="color:#D4D4D4;">}))</span></span>
<span class="line"><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">done</span><span style="color:#D4D4D4;">();</span></span></code></pre></div><p><strong>Example</strong>:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Tables</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">SelfRef</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Text</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Number</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &quot;relatix&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> model</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">Tables</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">addTables</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">    People:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">      name:</span><span style="color:#9CDCFE;"> Text</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">      age:</span><span style="color:#9CDCFE;"> Number</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">      favouriteCoWorker:</span><span style="color:#9CDCFE;"> SelfRef</span><span style="color:#C586C0;"> as</span><span style="color:#569CD6;"> typeof</span><span style="color:#9CDCFE;"> SelfRef</span><span style="color:#D4D4D4;"> | </span><span style="color:#4EC9B0;">null</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#9CDCFE;">    Projects:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">title:</span><span style="color:#9CDCFE;"> Text</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">description:</span><span style="color:#9CDCFE;"> Text</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">addTables</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">Ref</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> ({</span></span>
<span class="line"><span style="color:#9CDCFE;">    Tasks:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">title:</span><span style="color:#9CDCFE;"> Text</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">assignedTo:</span><span style="color:#DCDCAA;"> Ref</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;People&quot;</span><span style="color:#D4D4D4;">), </span><span style="color:#9CDCFE;">project:</span><span style="color:#DCDCAA;"> Ref</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Projects&quot;</span><span style="color:#D4D4D4;">) },</span></span>
<span class="line"><span style="color:#D4D4D4;">  }))</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">populate</span><span style="color:#D4D4D4;">(({ </span><span style="color:#9CDCFE;">People</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Projects</span><span style="color:#D4D4D4;"> }) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> ({</span></span>
<span class="line"><span style="color:#9CDCFE;">    People:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">      alice:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">name:</span><span style="color:#CE9178;"> &quot;Alice&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">age:</span><span style="color:#B5CEA8;"> 25</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">favouriteCoWorker:</span><span style="color:#DCDCAA;"> People</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;bob&quot;</span><span style="color:#D4D4D4;">) },</span></span>
<span class="line"><span style="color:#9CDCFE;">      bob:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">name:</span><span style="color:#CE9178;"> &quot;Bob&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">age:</span><span style="color:#B5CEA8;"> 30</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">favouriteCoWorker:</span><span style="color:#569CD6;"> null</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#9CDCFE;">      james:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">name:</span><span style="color:#CE9178;"> &quot;James&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">age:</span><span style="color:#B5CEA8;"> 26</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">favouriteCoWorker:</span><span style="color:#DCDCAA;"> People</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;alice&quot;</span><span style="color:#D4D4D4;">) },</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#9CDCFE;">    Projects:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">      proj1:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">title:</span><span style="color:#CE9178;"> &quot;Website Redesign&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">description:</span><span style="color:#CE9178;"> &quot;Revamp company site&quot;</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#9CDCFE;">    Tasks:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">      task1:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">        title:</span><span style="color:#CE9178;"> &quot;Design Homepage&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">        assignedTo:</span><span style="color:#DCDCAA;"> People</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;alice&quot;</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#9CDCFE;">        project:</span><span style="color:#DCDCAA;"> Projects</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;proj1&quot;</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">      },</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  }))</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">done</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">tables</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">initIds</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">create</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">select</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">commit</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">deepSelect</span><span style="color:#D4D4D4;"> } = </span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">;</span></span></code></pre></div><p>The utilities produced are:</p><ul><li><strong><code>tables</code></strong>: the defined tables</li><li><strong><code>initIds</code></strong>: mapping between the keys used in <code>populate</code> (initial state) and their ids</li><li><strong><code>create</code></strong>: contains an entry creator for each table</li><li><strong><code>select</code></strong>: memoised selectors for entries</li><li><strong><code>commit</code></strong>: enables create‑update‑delete operations on the model</li><li><strong><code>deepSelect</code></strong>: selectors that resolve references within entries</li></ul><p>Each of these elements is detailed in the following sections.</p>`,9)]))}const d=n(e,[["render",p]]);export{C as __pageData,d as default};
