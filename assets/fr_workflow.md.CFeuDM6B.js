import{_ as n,c as a,o as l,ae as e}from"./chunks/framework.oxQ2x61N.js";const C=JSON.parse('{"title":"Workflow","description":"","frontmatter":{},"headers":[],"relativePath":"fr/workflow.md","filePath":"fr/workflow.md"}'),o={name:"fr/workflow.md"};function p(t,s,D,c,r,y){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="workflow" tabindex="-1">Workflow <a class="header-anchor" href="#workflow" aria-label="Permalink to &quot;Workflow&quot;">​</a></h1><p>Le <em>workflow</em> de <code>relatix</code> reproduit le cheminement d’un schéma relationnel — de la définition des tables jusqu’à leur exploitation. Vous commencez par poser la structure (tables et références), puis vous l’enrichissez de données cohérentes, et enfin vous récupérez des utilitaires typés pour lire ou modifier ces données. Chaque étape est chaînée à la précédente, ce qui rend la progression linéaire et facile à suivre.</p><ol><li>Définition initiale des tables : Utilisez la fonction <code>Tables</code> avec un objet de configuration optionnel pour générer le constructeur de tables.</li><li>Ajout de tables : Chainez le constructeur avec la méthode .addTables pour créer un ensemble initial de tables</li><li>Ajout de tables supplémentaires : La méthode .addTables peut être chaînée autant de fois que nécessaire pour inclure des tables contenant des références vers les tables définies lors de ses appels précédents.</li><li>Population des données : Ajoutez des entrées aux tables avec la méthode .populate.</li><li>Finalisation : Appelez .done() pour obtenir un ensemble d&#39;utilitaires permettant d&#39;interagir avec le modèle.</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Tables</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &quot;relatix&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> const</span><span style="color:#4FC1FF;"> model</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">Tables</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#6A9955;">  // Paramétrisation de Tables</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">addTables</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#6A9955;">  // Ajout de tables indépendantes (références internes possibles)</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">addTables</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">Ref</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#6A9955;">  // Ajout de tables en référençant les tables existantes</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">populate</span><span style="color:#D4D4D4;">(({ </span><span style="color:#9CDCFE;">Table1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Table2</span><span style="color:#D4D4D4;">, ... }) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> ({</span></span>
<span class="line"><span style="color:#6A9955;">  // Remplissage des tables avec des données concrètes</span></span>
<span class="line"><span style="color:#D4D4D4;">}))</span></span>
<span class="line"><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">done</span><span style="color:#D4D4D4;">();</span></span></code></pre></div><p><strong>Exemple</strong> :</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dark-plus vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Tables</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">SelfRef</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Text</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Number</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &quot;relatix&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> model</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">Tables</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">addTables</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">    People:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">      name:</span><span style="color:#9CDCFE;"> Text</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">      age:</span><span style="color:#9CDCFE;"> Number</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">      favouriteCoWorker:</span><span style="color:#9CDCFE;"> SelfRef</span><span style="color:#C586C0;"> as</span><span style="color:#569CD6;"> typeof</span><span style="color:#9CDCFE;"> SelfRef</span><span style="color:#D4D4D4;"> | </span><span style="color:#4EC9B0;">null</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#9CDCFE;">    Projects:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">title:</span><span style="color:#9CDCFE;"> Text</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">description:</span><span style="color:#9CDCFE;"> Text</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">addTables</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">Ref</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> ({</span></span>
<span class="line"><span style="color:#9CDCFE;">    Tasks:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">title:</span><span style="color:#9CDCFE;"> Text</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">assignedTo:</span><span style="color:#DCDCAA;"> Ref</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;People&quot;</span><span style="color:#D4D4D4;">), </span><span style="color:#9CDCFE;">project:</span><span style="color:#DCDCAA;"> Ref</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Projects&quot;</span><span style="color:#D4D4D4;">) },</span></span>
<span class="line"><span style="color:#D4D4D4;">  }))</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">populate</span><span style="color:#D4D4D4;">(({ </span><span style="color:#9CDCFE;">People</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Projects</span><span style="color:#D4D4D4;"> }) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> ({</span></span>
<span class="line"><span style="color:#9CDCFE;">    People:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">      alice:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">name:</span><span style="color:#CE9178;"> &quot;Alice&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">age:</span><span style="color:#B5CEA8;"> 25</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">favouriteCoWorker:</span><span style="color:#DCDCAA;"> People</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;bob&quot;</span><span style="color:#D4D4D4;">) },</span></span>
<span class="line"><span style="color:#9CDCFE;">      bob:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">name:</span><span style="color:#CE9178;"> &quot;Bob&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">age:</span><span style="color:#B5CEA8;"> 30</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">favouriteCoWorker:</span><span style="color:#569CD6;"> null</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#9CDCFE;">      james:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">name:</span><span style="color:#CE9178;"> &quot;James&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">age:</span><span style="color:#B5CEA8;"> 26</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">favouriteCoWorker:</span><span style="color:#DCDCAA;"> People</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;alice&quot;</span><span style="color:#D4D4D4;">) },</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#9CDCFE;">    Projects:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">      proj1:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">title:</span><span style="color:#CE9178;"> &quot;Website Redesign&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">description:</span><span style="color:#CE9178;"> &quot;Revamp company site&quot;</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#9CDCFE;">    Tasks:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">      task1:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">        title:</span><span style="color:#CE9178;"> &quot;Design Homepage&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">        assignedTo:</span><span style="color:#DCDCAA;"> People</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;alice&quot;</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#9CDCFE;">        project:</span><span style="color:#DCDCAA;"> Projects</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;proj1&quot;</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">      },</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  }))</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">done</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">tables</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">initIds</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">create</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">select</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">commit</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">deepSelect</span><span style="color:#D4D4D4;"> } = </span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">;</span></span></code></pre></div><p>Les utilitaires produits sont :</p><ul><li><code>tables</code>: les tables définies</li><li><code>initIds</code>: mapping entre les clés de populate (état initial) et leurs ids</li><li><code>create</code>: contient un créateur d&#39;entrée pour chaque table</li><li><code>select</code>: sélecteurs memoïsés pour les entrées</li><li><code>commit</code>: permet d&#39;effectuer des opérations create-update-delete sur le modèle</li><li><code>deepSelect</code>: sélecteurs pour les entrées en résolvant les référeces</li></ul><p>Chacun de ces éléments sont présentés en détails dans les parties suivantes.</p>`,9)]))}const d=n(o,[["render",p]]);export{C as __pageData,d as default};
